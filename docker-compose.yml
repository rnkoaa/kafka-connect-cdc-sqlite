version: "3"

services:
  kafka:
    image: rnkoaa/kafka-kraft:3
    ports:
      - "9092:9092"
    networks:
      - order-service
    environment:
      KRAFT_CONTAINER_HOST_NAME: kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:6.2.1
    networks:
    - order-service
    ports:
    - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-connect:
    image: rnkoaa/kafka-connect:6.2.1
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: quickstart-avro
      CONNECT_CONFIG_STORAGE_TOPIC: quickstart-avro-config
      CONNECT_OFFSET_STORAGE_TOPIC: quickstart-avro-offsets
      CONNECT_STATUS_STORAGE_TOPIC: quickstart-avro-status
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars' 
    networks:
      - order-service
    depends_on:
      - schema-registry
      - kafka
  
networks:
  order-service: 

